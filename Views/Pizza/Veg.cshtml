@model Ibiza_Pizza.Models.Ibiza

@{
    ViewBag.Title = "Veg";
}

<h2>Ibiza Pizza</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal"></div>
    <h4>Pizza Sales</h4>
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Cash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cash, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>
    <div class="form-group">
        Please Select Pizza Size @Html.DropDownListFor(m => m.Bro, new
SelectList(Enum.GetValues(typeof(Ibiza_Pizza.Models.Ibiza.PizzaSize))),
"*Pizza Size*", new { htmlAttributes = new { @class = "form-control" } }) <br />
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Pizza_type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.RadioButtonFor(model => model.Pizza_type, "Veg") Veg<br />
            @Html.RadioButtonFor(model => model.Pizza_type, "Chicken") Chicken<br />
            @Html.ValidationMessageFor(model => model.Pizza_type, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Drink, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(D => D.Drink) Drink<br />
                @Html.ValidationMessageFor(model => model.Drink, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

   

    <div class="form-group">
        @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Change, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Change, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Change, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="CALCULATE" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Contact")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
